name: Continuous Integration

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  run-docker-tests-bash:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3  # https://github.com/marketplace/actions/checkout
      - run: script/run-docker-tests.bash

  native-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test & package
        run: |
          cmake -S . -B build/ci
          cmake --build build/ci --parallel --target all-unit build-package --config Release
      - uses: actions/upload-artifact@v3  # https://github.com/actions/upload-artifact
        with:
          name: package-${{ github.job }}
          path: build/ci/*.tar.xz

  native-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test & package
        run: |
          cmake -S . -B build/ci -DCMAKE_BUILD_TYPE=Release
          cmake --build build/ci --parallel --target all-unit build-package
      - uses: actions/upload-artifact@v3
        with:
          name: package-${{ github.job }}
          path: build/ci/*.tar.xz

  native-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test & package
        run: |
          # Allocate virtual frame buffer
          sudo apt update && sudo apt install -y xvfb
          export DISPLAY=:99.0
          Xvfb :99 -screen 0 1280x720x24 &
          
          retries=5
          while [ $retries -gt 0 ]; do
            #xdpyinfo -display $DISPLAY > /dev/null 2>&1 && break
            echo "Awaiting virtual frame buffer..."
            xdpyinfo -display $DISPLAY && break
            sleep 1
            retries=$((retries-1))
          done
          
          if [ $retries -eq 0 ]; then
            echo "Failed to create virtual frame buffer!"
            exit 1
          fi
          
          cmake -S . -B build/ci -DCMAKE_BUILD_TYPE=Release
          cmake --build build/ci --parallel --target all-unit build-package
#        env:
#          GTEST_FILTER: "-Application.*:ApplicationImpl.*"
      - uses: actions/upload-artifact@v3
        with:
          name: package-${{ github.job }}
          path: build/ci/*.tar.xz
